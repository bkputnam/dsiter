package blatis.row;

${Disclaimer}

public class RowShape {
<% ColumnTypes.each { type -> %>
	private int num${type.capitalized}s;<% } %>

	public RowShape() {
		this(<% print ColumnTypes.collect({ type -> "0" }).join(", ") %>);
	}

	public RowShape(<% print ColumnTypes.collect({ type -> "int num" + type.capitalized + "s" }).join(", ") %>) {
<% ColumnTypes.each { type -> %>
		this.num${type.capitalized}s = num${type.capitalized}s;<% } %>
	}

<% ColumnTypes.each { type -> %>
		public int getNum${type.capitalized}s() { return num${type.capitalized}s; }<% } %>

<%
def typeSwitch(indent, varName, bodyGenerator) {
    ColumnTypes.eachWithIndex { type, index ->
        println ""
        print indent;
        if(index == 0) { print "if" } else { print "else if" }
        println "(" + varName + " == ColumnType." + type.type + ") {"
        bodyGenerator(indent + "\t", type)
        print "\n" + indent + "}"
    }
    println "\n" + indent + "else {"
    println indent + "\tthrow new Error(\"This should be impossible\");"
    print indent + "}"
}
%>

	public int getNum(ColumnType type) {
<% typeSwitch("\t\t", "type") { indent, type ->
        print indent + "return getNum" + type.capitalized + "s();"
} %>
	}

	public void setNum(ColumnType type, int num) {
<% typeSwitch("\t\t", "type") { indent, type ->
        print indent + "num" + type.capitalized + "s = num;"
} %>
	}

	public void incrNum(ColumnType type) {
<% typeSwitch("\t\t", "type") { indent, type ->
        print indent + "num" + type.capitalized + "s++;"
} %>
	}

	public static RowShape add(RowShape shape1, RowShape shape2) {
		return new RowShape(
<% ColumnTypes.eachWithIndex { type, index -> %><% if(index > 0) { %>,<% } %>
			shape1.num${type.capitalized}s + shape2.num${type.capitalized}s<% } %>
		);
	}

	public RowShape add(RowShape other) {
		return RowShape.add(this, other);
	}
}